# Inspection Build Workflow Template
#
# This workflow builds an inspection image from the given Specification
# Additionally, it mounts an artifact repository to store the resulting artifacts.
#
# The ouputs are stored in s3 as such:
# s3://<bucket>/<prefix>/<workflow-name>/<workflow-step>
#
# NOTE: The artifact repository has to be configured via ConfigMap, see
# https://github.com/argoproj/argo/blob/master/ARTIFACT_REPO.md
# or use the Argo ansible role: https://github.com/CermakM/ansible-role-argo-workflows
#
# successCondition: `n` pods have finished successfully and are present in the cluster
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: inspection-build-template
  labels:
    mark: cleanup
spec:
  entrypoint: main

  templates:
  - name: main
    inputs:
      parameters:
      # Required
      - name: dockerfile
      - name: inspection-id
      - name: specification
      # Defaults
      - name: cpu
        value: "500m"
      - name: memory
        value: "1Gi"
    steps:
    - - name: imagestream
        arguments:
          parameters:
          - name: inspection-id
            value: "{{inputs.parameters.inspection-id}}"
        template: create-imagestream
    - - name: buildconfig
        arguments:
          parameters:
          - name: dockerfile
            value: "{{inputs.parameters.dockerfile}}"
          - name: inspection-id
            value: "{{inputs.parameters.inspection-id}}"
          - name: specification
            value: "{{inputs.parameters.specification}}"
          - name: cpu
            value: "{{inputs.parameters.cpu}}"
          - name: memory
            value: "{{inputs.parameters.memory}}"
        template: create-buildconfig
    - - name: build
        arguments:
          parameters:
          - name: inspection-id
            value: "{{inputs.parameters.inspection-id}}"
        template: await-build

  - name: create-imagestream
    inputs:
      parameters:
      - name: inspection-id
    resource:
      action: create
      manifest: |
        apiVersion: image.openshift.io/v1
        kind: ImageStream
        metadata:
          labels:
            app: amun
            component: amun-inspection-imagestream
            mark: cleanup
          name: "{{inputs.parameters.inspection-id}}"
          ownerReferences:
          - apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            name: "{{workflow.name}}"
            uid: "{{workflow.uid}}"
        spec:
          lookupPolicy:
            local: true

  - name: create-buildconfig
    inputs:
      parameters:
      - name: dockerfile
      - name: inspection-id
      - name: specification
      - name: cpu
      - name: memory
    resource:
      action: create
      validate: false
      manifest: |
        kind: BuildConfig
        apiVersion: build.openshift.io/v1
        metadata:
          name: "{{workflow.parameters.inspection-id}}"
          labels:
            app: amun
            component: amun-inspection-buildconfig
            workflow: "{{workflow.name}}"
            mark: cleanup
          annotations:
            amun_specification: '{{inputs.parameters.specification}}'
          ownerReferences:
          - apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            name: "{{workflow.name}}"
            uid: "{{workflow.uid}}"
        spec:
          output:
            to:
              kind: ImageStreamTag
              name: "{{inputs.parameters.inspection-id}}:latest"
          resources:
            limits:
              memory: "{{inputs.parameters.memory}}"
              cpu: "{{inputs.parameters.cpu}}"
            requests:
              memory: "{{inputs.parameters.memory}}"
              cpu: "{{inputs.parameters.cpu}}"
          source:
            type: Dockerfile
            dockerfile: "{{inputs.parameters.dockerfile}}"
          strategy:
            type: Docker
            dockerStrategy:
              env:
                - name: LANG
                  value: 'en_US.UTF-8'
                - name: HOME
                  value: '/home/amun/'
                - name: PIPENV_CACHE_DIR
                  value: '/home/amun/.cache'
                - name: PIPENV_COLORBLIND
                  value: '1'
                - name: PIPENV_HIDE_EMOJIS
                  value: '1'
                - name: PIPENV_NOSPIN
                  value: '1'
                - name: PIPENV_VERBOSITY
                  value: '1'
          triggers:
            - type: ConfigChange

  - name: await-build
    inputs:
      parameters:
      - name: inspection-id
    resource:
      action: get
      successCondition: status.phase == Complete
      failureCondition: status.phase == Failed
      manifest: |
        apiVersion: "build.openshift.io/v1"
        kind: "Build"
        metadata:
          name: "{{inputs.parameters.inspection-id}}-1"
